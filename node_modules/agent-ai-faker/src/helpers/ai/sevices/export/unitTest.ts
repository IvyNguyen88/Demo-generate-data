import { generateFakeData } from '../export/FakeDataOptions';
import { exportData } from '../export/exportFunctions';
import { parseData } from '../export/parserUtils';

const options = {
    purpose: "testing",
    format: "JSON", // Change to "CSV" for CSV format
    fields: ["UUID","name", "age" , "address", "fullname"],
    volume: 1000,
    constraints: "age between 18 and 20",
};

generateFakeData(options)
    .then(async (generatedData) => {
        try {
            const dataFormat = options.format;
            const parsedData = parseData(generatedData, dataFormat);
            console.log('Parsed Data:', parsedData);

            if (!Array.isArray(parsedData) || parsedData.length === 0) {
                throw new Error('Generated data is invalid or empty.');
            }

            const exportOptions = {
                data: parsedData,
                filename: `./test-results/generated_data.${dataFormat.toLowerCase()}`,
                format: dataFormat as 'JSON' | 'CSV' | 'plain text',
            };

            await exportData(exportOptions);
            console.log('Data successfully exported.');
        } catch (error) {
            console.error('Error parsing or exporting data:', error);
        }
    })
    .catch(error => console.error("Failed to generate data:", error));
