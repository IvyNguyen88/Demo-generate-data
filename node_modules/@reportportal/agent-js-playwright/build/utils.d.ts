import { TestCase, TestStatus, TestResult } from '@playwright/test/reporter';
import { Attribute, Attachment, AttachmentsConfig } from './models';
import { STATUSES, TestAnnotation, TestOutcome } from './constants';
export declare const isFalse: (value: string | boolean | undefined) => boolean;
export declare const promiseErrorHandler: (promise: Promise<void>, message?: string) => Promise<void>;
export declare const getAgentInfo: () => {
    version: string;
    name: string;
};
export declare const getSystemAttributes: (skippedIssue?: boolean) => Array<Attribute>;
type testItemPick = Pick<TestCase, 'titlePath'>;
export declare const getCodeRef: (testItem: testItemPick, itemTitle: string, pathToExclude?: string) => string;
export declare const sendEventToReporter: (type: string, data: any, suite?: string) => void;
export declare const fileExists: (filePath: string) => Promise<boolean>;
export declare const getAttachments: (attachments: TestResult['attachments'], { uploadTrace, uploadVideo }?: AttachmentsConfig) => Promise<Attachment[]>;
export declare const isErrorLog: (message: string) => boolean;
export declare const calculateRpStatus: (outcome: TestOutcome, status: TestStatus, annotations: TestAnnotation[]) => STATUSES;
export {};
